// Copyright 2024 DeepMind Technologies Limited.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or  implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ============================================================================

// Evergreen service definition.

syntax = "proto3";

package evergreen.v2;

import "google/gdm/evergreen/evergreen.proto";

// A single streaming unit of the Evergreen session.
message SessionMessage {
  repeated NodeFragment node_fragments = 1;
  repeated Action actions = 2;
}

service EvergreenService {

  // Establishes an Evergreen session within which multiple Actions can be sent.
  // Concrete semantics of the request are determined by the actions used.
  //
  // Actions can share parts of inputs and accept outputs of previous actions
  // without re-sending them. It is highly beneficial to group related Actions,
  // e.g. GENERATE actions from a single user-assistant interaction session.
  // However unrelated Actions, such as entries in an eval dataset should be
  // sent in separate sessions.
  rpc StartSession(stream SessionMessage) returns (stream SessionMessage) {}
}
